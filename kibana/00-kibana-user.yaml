apiVersion: v1
kind: ServiceAccount
metadata:
  name: create-kibana-user-sa
  namespace: logging
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  namespace: logging
  name: create-kibana-user-role
rules:
- apiGroups: [""]
  resources: ["secrets"]
  verbs: ["create", "get", "list", "update"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: create-kibana-user-binding
  namespace: logging
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: create-kibana-user-role
subjects:
- kind: ServiceAccount
  name: create-kibana-user-sa
  namespace: logging
---
apiVersion: batch/v1
kind: Job
metadata:
  name: create-kibana-user
  namespace: logging
spec:
  backoffLimit: 4
  template:
    spec:
      serviceAccountName: create-kibana-user-sa
      containers:
      - name: create-user
        image: curlimages/curl:7.85.0
        env:
        - name: ELASTIC_USERNAME
          valueFrom:
            secretKeyRef:
              name: elastic-credentials
              key: username
        - name: ELASTIC_PASSWORD
          valueFrom:
            secretKeyRef:
              name: elastic-credentials
              key: password
        command:
        - /bin/sh
        - -c
        - |
          # Esperar a que Elasticsearch est√© listo
          until curl -k -u $ELASTIC_USERNAME:$ELASTIC_PASSWORD https://elasticsearch.logging.svc.cluster.local:9200; do
            echo "Waiting for Elasticsearch..."
            sleep 5
          done

          # Crear usuario kibana_system con rol adecuado
          curl -k -u $ELASTIC_USERNAME:$ELASTIC_PASSWORD -X POST "https://elasticsearch.logging.svc.cluster.local:9200/_security/user/kibana_system_user" -H 'Content-Type: application/json' -d'
          {
            "password" : "kibanapass123",
            "roles" : [ "kibana_system" ],
            "full_name" : "Kibana System User"
          }'

          # Crear o actualizar Secret directamente usando la API de Kubernetes
          curl -k -X POST -H "Authorization: Bearer $(cat /var/run/secrets/kubernetes.io/serviceaccount/token)" \
            -H "Content-Type: application/json" \
            --data '{
              "apiVersion": "v1",
              "kind": "Secret",
              "metadata": {
                "name": "kibana-credentials",
                "namespace": "logging"
              },
              "data": {
                "password": "a2liYW5hcGFzczEyMw=="
              },
              "type": "Opaque"
            }' https://kubernetes.default.svc/api/v1/namespaces/logging/secrets
      restartPolicy: OnFailure